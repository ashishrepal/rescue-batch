package com.aashish.rescue.batch.entity;

import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
@Entity
@Table(name = "batch_report")
public class BatchReport {

	// An autogenerated id (unique for each user in the db)
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;

	@Column(name = "message")
	private String message;

	@Column(name = "status")
	private String status;

	@Column(name = "in_host_ip_address")
	private String dbInHostIpAddress;

	@Column(name = "out_host_ip_address")
	private String dbOutHostIpAddress;

	@Column(name = "in_db_name")
	private String inDbName;

	@Column(name = "out_db_name")
	private String outDbName;

	@Column(name = "in_db_type")
	private String inDbType;

	@Column(name = "out_dp_type")
	String outDbType;

	@Column(name = "in_db_schema")
	private String inDbSchema;

	@Column(name = "out_db_schema")
	private String outDbSchema;

	@Column(name = "in_extra_commands")
	private String inExtraCommands;

	@Column(name = "out_extra_commands")
	private String outExtraCommands;

	@Column(name = "in_db_table_names")
	private String inDbTableNames;

	@Column(name = "out_db_table_names")
	private String outDbTableNames;

	@Column(name = "db_script_file_name")
	private String dbScriptFileName;

	@Column(name = "db_script_file_path")
	private String dbScriptFilePath;
	
	@Column(name = "email_ids")
	private String emailIds;

	@Column(name = "created_date_time")
	private Timestamp createdDateTime=new Timestamp(System.currentTimeMillis());

	@Column(name = "ip_address")
	private String machineIp;

	@Column(name = "logged_user_name")
	private String loggedUserName;
	
	@Column(name = "batch_start_time")
	private String batchStartTime;

	@Column(name = "batch_end_time")
	private String batchEndTime;

	@Column(name = "email_status")
	private String emailStatus;

	@Column(name = "email_sent_on")
	private String emailSentTimestamp;

	
	public BatchReport() {
	}

	public BatchReport(long id) {
		this.id = id;
	}

	public BatchReport(String message, String status) {
		this.message = message;
		this.status = status;
	}

	@Override
	public String toString() {
		return "\n Batch Report \n message=" + message + "\n status=" + status + "\n dbInHostIpAddress="
				+ dbInHostIpAddress + "\n dbOutHostIpAddress=" + dbOutHostIpAddress + "\n inDbName=" + inDbName
				+ "\n outDbName=" + outDbName + "\n inDbType=" + inDbType + "\n outDbType=" + outDbType + "\n inDbSchema="
				+ inDbSchema + "\n outDbSchema=" + outDbSchema + "\n inExtraCommands=" + inExtraCommands
				+ "\n outExtraCommands=" + outExtraCommands + "\n inDbTableNames=" + inDbTableNames + "\n outDbTableNames="
				+ outDbTableNames + "\n dbScriptFileName=" + dbScriptFileName + "\n dbScriptFilePath=" + dbScriptFilePath
				+ "\n emailIds=" + emailIds + "\n createdDateTime=" + createdDateTime + "\n machineIp=" + machineIp
				+ "\n loggedUserName=" + loggedUserName + "\n batchStartTime=" + batchStartTime + "\n batchEndTime="
				+ batchEndTime;
	}
}